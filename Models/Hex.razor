@using Microsoft.AspNetCore.SignalR.Client
@using System.Text
@using BlazorApp.GH
@using BlazorApp.GH.Pages
@inject NavigationManager NavigationManager


<div id="@GetId()" class="hexagon" style="top:@Top;left:@Left;">
    @GetText()
    <div style="height:@HexInnerComponentHeight;width:@HexInnerComponentWidth;" class="h1" @onclick="Click"></div>
    <div style="height:@HexInnerComponentHeight;width:@HexInnerComponentWidth;" class="h2" @onclick="Click"></div>
    <div style="height:@HexInnerComponentHeight;width:@HexInnerComponentWidth;" class="h3" @onclick="Click"></div>
    @* <button style="position:absolute;align-content:center" @onclick="Send">HexBtn</button>*@
</div>
@code{

    public Hex() { }

    public Hex(int left, int top)
    {
        LeftCoord = left;
        TopCoord = top;
    }


    [Parameter]
    public int TopCoord { get; set; }
    [Parameter]
    public int LeftCoord { get; set; }
    [Parameter]
    public Gloomhaven Board { get; set; }

    public string HexInnerComponentHeight { get; set; }
    public string HexInnerComponentWidth { get; set; }

    public List<IGameComponent> Components = new List<IGameComponent>();

    private HubConnection hubConnection;
    private string Top;
    private string Left;
    private MarkupString Text;
    private HexSizeConfig hexSizeConfig;
    private string HexHeight;
    private string HexWidth;

    private string TopInner = "0px";
    private string LeftInner = "0px";

    protected override void OnInitialized()
    {
        var s = 3;

        hexSizeConfig = GlobalSettings.HexSizeConfigurations[s];
        Top = (LeftCoord % 2 == 0 ? TopCoord * hexSizeConfig.Height : TopCoord * hexSizeConfig.Height + (hexSizeConfig.Height / 2)).ToString() + "px";
        Left = (LeftCoord * hexSizeConfig.Width).ToString() + "px";
        HexInnerComponentHeight = hexSizeConfig.InnerPartHeight + "px";
        HexInnerComponentWidth = hexSizeConfig.InnerPartWidth + "px";
        HexWidth = hexSizeConfig.Width + "px";
        HexHeight = hexSizeConfig.Height + "px";


    }

    private string GetId()
    {
        return TopCoord + "_" + LeftCoord;
    }

    private string GetText()
    {

        StringBuilder sb = new StringBuilder();
        foreach (var component in Components)
        {
            sb.AppendLine(component.DisplayText());
        }
        return sb.ToString();

    }

    protected override async Task OnInitializedAsync()
    {


    }

    public string Test(string s)
    {
        return "dal si" + s;
    }

    private void Click()
    {
        //Board.Click(GetId());
    }

    public async ValueTask DisposeAsync()
    {
        await hubConnection.DisposeAsync();
    }
}